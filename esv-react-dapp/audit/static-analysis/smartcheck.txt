jar:file:/home/srinjoychakravarty/.nvm/versions/node/v15.1.0/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlline 22:12 extraneous input 'payable' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 218
column: 12
content: accounts[_userUUID].ethAddress=address(0)

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 264
column: 8
content: addresslastAddr=address(0)

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 278
column: 8
content: addresslastAddr=address(0)

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 308
column: 19
content: (address(0))

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 325
column: 19
content: (address(0))

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 84
column: 8
content: for(uintj=0;j<accountIDs.length;j++){if(accountIDs[j]==_userUUID){deleteaccountIDs[j];uint256lastESVItemID=accountIDs[accountIDs.length-1];accountIDs[j]=lastESVItemID;accountIDs.pop();break;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 119
column: 8
content: for(uinti=0;i<_userUUID.length;i++){require(accounts[_userUUID[i]].exists==true,"ESVItem not created before update!");uint256pendingAcct=_userUUID[i];addressethAddress=bytesToAddress(_ethaddr[i]);require(pendingAcct>lastAcct,"Duplicate ESVItem detected!");require(ethAddresses[ethAddress]==false,"Address already in system!");lastAcct=pendingAcct;accounts[_userUUID[i]]=ESVItem(true,true,_msg[i],_sig[i],ethAddress);accountMessageHashes.push(_msg[i]);MessageHashes[_msg[i]]=true;accountSignatures.push(_sig[i]);Signatures[_sig[i]]=true;etherAddrs.push(ethAddress);ethAddresses[ethAddress]=true;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 153
column: 8
content: for(uinti=0;i<_userUUID.length;i++){require(accounts[_userUUID[i]].exists==true,"ESVItem doesn't exist in system!");uint256pendingAcct=_userUUID[i];require(pendingAcct>lastAcct,"Duplicate ESVItem retrieval attempted!");lastAcct=pendingAcct;ESVItemstorageaccount=accounts[_userUUID[i]];accounts_array[i]=account;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 170
column: 8
content: for(uinti=0;i<_accts.length;i++){uint256pendingAcct=_accts[i];require(pendingAcct>lastAcct,"Duplicate ESVItem retrieval attempted!");require(accounts[_accts[i]].exists==false,"ESVItem attempted already exists in system!");lastAcct=pendingAcct;if(accounts[pendingAcct].exists==false){ESVItemmemorynewESVItem=ESVItem(true,false,"","",address(0));accounts[pendingAcct]=newESVItem;accountIDs.push(pendingAcct);}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 220
column: 12
content: for(uintj=0;j<accountSignatures.length;j++){if(keccak256(abi.encodePacked(accountSignatures[j]))==keccak256(abi.encodePacked(signatureExpired))){deleteaccountSignatures[j];deleteaccountMessageHashes[j];deleteetherAddrs[j];stringmemorylastESVItemSig=accountSignatures[accountSignatures.length-1];stringmemorylastMsgHash=accountMessageHashes[accountMessageHashes.length-1];accountSignatures[j]=lastESVItemSig;accountMessageHashes[j]=lastMsgHash;accountSignatures.pop();accountMessageHashes.pop();etherAddrs.pop();break;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 250
column: 8
content: for(uintj=0;j<adminAddresses.length;j++){if(adminAddresses[j]==_addr){deleteadminAddresses[j];addresslastAdminAddr=adminAddresses[adminAddresses.length-1];adminAddresses[j]=lastAdminAddr;adminAddresses.pop();break;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 265
column: 8
content: for(uintj=0;j<_addrs.length;j++){addresspendingAddr=_addrs[j];require(pendingAddr>lastAddr,"Duplicates detected in input list!");lastAddr=pendingAddr;require(admins[_addrs[j]]==false,"Admin already exists!");admins[_addrs[j]]=true;adminAddresses.push(_addrs[j]);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 279
column: 8
content: for(uinti=0;i<_addrs.length;i++){addresspendingAddr=_addrs[i];require(pendingAddr>lastAddr,"Duplicates detected in input list!");lastAddr=pendingAddr;require(pendingAddr!=owner,"Can't remove contract owner as admin!");deleteadmins[pendingAddr];for(uintj=0;j<adminAddresses.length;j++){if(adminAddresses[j]==pendingAddr){addresslastAdminAddr=adminAddresses[adminAddresses.length-1];deleteadminAddresses[j];adminAddresses[j]=lastAdminAddr;adminAddresses.pop();break;}}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 286
column: 12
content: for(uintj=0;j<adminAddresses.length;j++){if(adminAddresses[j]==pendingAddr){addresslastAdminAddr=adminAddresses[adminAddresses.length-1];deleteadminAddresses[j];adminAddresses[j]=lastAdminAddr;adminAddresses.pop();break;}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 137
column: 4
content: functionbytesToAddress(bytesmemorysource)internalpurereturns(addressaddr){assembly{addr:=mload(add(source,0x14))}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 84
column: 8
content: for(uintj=0;j<accountIDs.length;j++){if(accountIDs[j]==_userUUID){deleteaccountIDs[j];uint256lastESVItemID=accountIDs[accountIDs.length-1];accountIDs[j]=lastESVItemID;accountIDs.pop();break;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 119
column: 8
content: for(uinti=0;i<_userUUID.length;i++){require(accounts[_userUUID[i]].exists==true,"ESVItem not created before update!");uint256pendingAcct=_userUUID[i];addressethAddress=bytesToAddress(_ethaddr[i]);require(pendingAcct>lastAcct,"Duplicate ESVItem detected!");require(ethAddresses[ethAddress]==false,"Address already in system!");lastAcct=pendingAcct;accounts[_userUUID[i]]=ESVItem(true,true,_msg[i],_sig[i],ethAddress);accountMessageHashes.push(_msg[i]);MessageHashes[_msg[i]]=true;accountSignatures.push(_sig[i]);Signatures[_sig[i]]=true;etherAddrs.push(ethAddress);ethAddresses[ethAddress]=true;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 153
column: 8
content: for(uinti=0;i<_userUUID.length;i++){require(accounts[_userUUID[i]].exists==true,"ESVItem doesn't exist in system!");uint256pendingAcct=_userUUID[i];require(pendingAcct>lastAcct,"Duplicate ESVItem retrieval attempted!");lastAcct=pendingAcct;ESVItemstorageaccount=accounts[_userUUID[i]];accounts_array[i]=account;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 170
column: 8
content: for(uinti=0;i<_accts.length;i++){uint256pendingAcct=_accts[i];require(pendingAcct>lastAcct,"Duplicate ESVItem retrieval attempted!");require(accounts[_accts[i]].exists==false,"ESVItem attempted already exists in system!");lastAcct=pendingAcct;if(accounts[pendingAcct].exists==false){ESVItemmemorynewESVItem=ESVItem(true,false,"","",address(0));accounts[pendingAcct]=newESVItem;accountIDs.push(pendingAcct);}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 220
column: 12
content: for(uintj=0;j<accountSignatures.length;j++){if(keccak256(abi.encodePacked(accountSignatures[j]))==keccak256(abi.encodePacked(signatureExpired))){deleteaccountSignatures[j];deleteaccountMessageHashes[j];deleteetherAddrs[j];stringmemorylastESVItemSig=accountSignatures[accountSignatures.length-1];stringmemorylastMsgHash=accountMessageHashes[accountMessageHashes.length-1];accountSignatures[j]=lastESVItemSig;accountMessageHashes[j]=lastMsgHash;accountSignatures.pop();accountMessageHashes.pop();etherAddrs.pop();break;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 250
column: 8
content: for(uintj=0;j<adminAddresses.length;j++){if(adminAddresses[j]==_addr){deleteadminAddresses[j];addresslastAdminAddr=adminAddresses[adminAddresses.length-1];adminAddresses[j]=lastAdminAddr;adminAddresses.pop();break;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 265
column: 8
content: for(uintj=0;j<_addrs.length;j++){addresspendingAddr=_addrs[j];require(pendingAddr>lastAddr,"Duplicates detected in input list!");lastAddr=pendingAddr;require(admins[_addrs[j]]==false,"Admin already exists!");admins[_addrs[j]]=true;adminAddresses.push(_addrs[j]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 279
column: 8
content: for(uinti=0;i<_addrs.length;i++){addresspendingAddr=_addrs[i];require(pendingAddr>lastAddr,"Duplicates detected in input list!");lastAddr=pendingAddr;require(pendingAddr!=owner,"Can't remove contract owner as admin!");deleteadmins[pendingAddr];for(uintj=0;j<adminAddresses.length;j++){if(adminAddresses[j]==pendingAddr){addresslastAdminAddr=adminAddresses[adminAddresses.length-1];deleteadminAddresses[j];adminAddresses[j]=lastAdminAddr;adminAddresses.pop();break;}}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 286
column: 12
content: for(uintj=0;j<adminAddresses.length;j++){if(adminAddresses[j]==pendingAddr){addresslastAdminAddr=adminAddresses[adminAddresses.length-1];deleteadminAddresses[j];adminAddresses[j]=lastAdminAddr;adminAddresses.pop();break;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 191
column: 15
content: i<=j

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 193
column: 19
content: arr[uint(i)]<pivot

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 194
column: 19
content: pivot<arr[uint(j)]

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 137
column: 4
content: functionbytesToAddress(bytesmemorysource)internalpurereturns(addressaddr){assembly{addr:=mload(add(source,0x14))}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 300
column: 4
content: functiongetSignatureAddress(bytes32hash,bytesmemorysignature)publicpurereturns(address){bytes32r;bytes32s;uint8v;if(signature.length!=65){return(address(0));}assembly{r:=mload(add(signature,0x20))s:=mload(add(signature,0x40))v:=byte(0,mload(add(signature,0x60)))}if(v<27){v+=27;}if(v!=27&&v!=28){return(address(0));}else{returnecrecover(hash,v,r,s);}}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 66
column: 63
content: (bool,bool,stringmemory,stringmemory,address)

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 139
column: 8
content: assembly{addr:=mload(add(source,0x14))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 311
column: 8
content: assembly{r:=mload(add(signature,0x20))s:=mload(add(signature,0x40))v:=byte(0,mload(add(signature,0x60)))}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 6
column: 4
content: uint256[]accountIDs;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 8
column: 4
content: string[]accountSignatures;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 9
column: 4
content: mapping(string=>bool)Signatures;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 11
column: 4
content: string[]accountMessageHashes;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 12
column: 4
content: mapping(string=>bool)MessageHashes;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 14
column: 4
content: address[]etherAddrs;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 15
column: 4
content: mapping(address=>bool)ethAddresses;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 17
column: 4
content: address[]adminAddresses;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 18
column: 4
content: mapping(address=>bool)admins;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 20
column: 4
content: mapping(uint256=>ESVItem)accounts;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 22
column: 4
content: addresspayableowner;

SOLIDITY_VISIBILITY :11
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :9
SOLIDITY_ADDRESS_HARDCODED :5
SOLIDITY_GAS_LIMIT_IN_LOOPS :12
SOLIDITY_USING_INLINE_ASSEMBLY :2
SOLIDITY_SHOULD_RETURN_STRUCT :1
SOLIDITY_SHOULD_NOT_BE_PURE :2
./Migrations.sol
ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 25
content: <

SOLIDITY_PRAGMAS_VERSION :2
